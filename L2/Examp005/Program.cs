//В предыдущем примере мы указывали значение массива вручную. А сейчас перепишем этот код с
//использованием генератора псевдослучайных чисел с использованием методов. Мы
//потренируем то, каким образом можно взять, например, метод, передать в него массив и
//заполнить массив нужным количеством элементов. На следующем этапе опишем метод,
//который будет выводить все элементы по порядку. Затем превратим наш код поиска нужного
//индекса в метод.

void FillArray(int[] collection) // Далее дадим наименование нашему методу FillArray, В качестве аргумента будет приниматься какая-то коллекция, то есть аргумент collection.
{
  int length = collection.Length; // получаем длину нашего массива
  int index = 0; //
  while (index < length)
  {
    collection[index] = new Random().Next(1, 10); //После этого обратимся к аргументу collection на позицию index и положим туда новое случайное число — целое число из диапазона 1–10.
    index++;
  }
}

void PrintArray(int[] col) //Теперь сделаем метод void, который будет печатать массив. Аналогичным образом в качестве аргумента здесь будет приходить массив. Обратите внимание, что здесь мы специально не
                            //даём одинаковые имена, чтобы привыкнуть называть разные аргументы различными именами.
{
    int count = col.Length; // Количество элементов
    int position = 0;
    while (position < count)
    {
        Console.WriteLine(col[position]);
        position++;
    }
}

int[] array = new int [10]; // определили массив array конструкцию new int[10], которая дословно означает «создай новый массив, где будет 10 элементов». По
                          //умолчанию. Кстати, он будет наполнен нулями. Чтобы заполнить массив случайными числами,воспользуемся методом, который опишем сами:

FillArray(array);
PrintArray(array);